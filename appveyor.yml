image: Visual Studio 2019
version: 1.0.{build}

environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  PROJECT_MAIN:   'CDP4-SDK'
  TEST_LOG:       'TestResults'
  TEST_RESULT:    'TestResult.xml'
  TEST_COVERAGE:  'CoverResults.xml'

skip_branch_with_pr: true

for:
# configuration for "master" branch, build in Release mode
-
  branches:
    only:
      - master
  configuration: Release
# configuration for "development" branch, build in Debug mode
-
  branches:
    only:
      - development
  configuration: Debug
# "fall back" configuration for all other branches
# no "branches" section defined
configuration: Debug
install:
  - choco install opencover.portable --version=4.7.922
  - dotnet tool install --global dotnet-sonarscanner --version 5.5.3

before_build:
  - cmd: nuget restore CDP4-SDK.sln
  - cmd: set "JAVA_HOME=C:\Program Files\Java\jdk11"
  - cmd: set "PATH=C:\Program Files\Java\jdk11\bin;%PATH%"
  - cmd: java -version
  - ps: >-
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
        Write-Host Sonar Scanning PR# $env:APPVEYOR_PULL_REQUEST_NUMBER
        dotnet sonarscanner begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.pullrequest.provider=GitHub /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } elseif ($env:APPVEYOR_REPO_BRANCH -eq "development") {
        Write-Host Sonar Scanning branch $env:APPVEYOR_REPO_BRANCH
        dotnet sonarscanner begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } elseif ($env:APPVEYOR_REPO_BRANCH -eq "master") {
        Write-Host Sonar Scanning branch $env:APPVEYOR_REPO_BRANCH
        dotnet sonarscanner begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } else {
        Write-Host Skipping Sonar Scanning
      }

build_script:
  - cmd: dotnet build CDP4-SDK-NETF.sln --configuration %CONFIGURATION% -v q --framework net472
  - cmd: dotnet build CDP4-SDK-NETF.sln --configuration %CONFIGURATION% -v q --framework net48
  - cmd: dotnet build CDP4-SDK-NETC.sln --configuration %CONFIGURATION% -v q --framework netcoreapp3.1
  - ps: >-
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
        Write-Host Building Nugets PR# $env:APPVEYOR_PULL_REQUEST_NUMBER
        dotnet pack CDP4-SDK-NETF.sln --configuration $env:CONFIGURATION -p:TargetFrameworks=net472;net48 --no-build --version-suffix "$env:APPVEYOR_BUILD_NUMBER-PR$env:APPVEYOR_PULL_REQUEST_NUMBER"
        nuget sources add -name github -username $env:GITHUB_USER -password $env:GITHUB_TOKEN -source https://nuget.pkg.github.com/RHEAGROUP/index.json -StorePasswordInClearText
        
        Get-ChildItem -Path C:\projects\cdp4-sdk-community-edition\ -Filter *.nupkg -Recurse -File -Name| ForEach-Object {
          nuget push $_ -Source "github" -SkipDuplicate
        }
      }

test_script:
    - >
      OpenCover.Console.exe
      -log:Error
      -register
      -target:"C:\Program Files\dotnet\dotnet.exe"
      -targetargs:"test CDP4-SDK-NETF.sln --framework net472 --logger ""trx;LogFileName=%TEST_RESULT%"" --filter=""(TestCategory!~WebServicesDependent) & (TestCategory!~AppVeyorExclusion)"" --configuration %CONFIGURATION% -v q"
      -returntargetcode
      -hideskipped:All
      -output:"%TEST_COVERAGE%"
      -filter:"+[CDP4*]* -[*.Tests*]* -[*.Views]*"
      -excludebyattribute:*.ExcludeFromCodeCoverageAttribute
      
after_test:
  - ps: >-
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER -Or $env:APPVEYOR_REPO_BRANCH -eq "development" -Or $env:APPVEYOR_REPO_BRANCH -eq "master") {
        dotnet sonarscanner end /d:"sonar.login=$env:SONARCLOUD_TOKEN"
      }
  - xcopy /q /Y /I "%TEST_COVERAGE%" "%TEST_LOG%\"

artifacts:
    - path: '%TEST_LOG%'
      name: test logs

    - path: '**\*.nupkg'
      name: builds